import { REST, Routes, SlashCommandBuilder, PermissionFlagsBits } from "discord.js";
import "dotenv/config";

const commands = [
  new SlashCommandBuilder()
    .setName("help")
    .setDescription("–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥"),
  new SlashCommandBuilder().setName("ping").setDescription("–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞"),
  new SlashCommandBuilder()
    .setName("points")
    .setDescription("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –æ—á–∫–∏")
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageMessages),
  new SlashCommandBuilder()
    .setName("addtracer")
    .setDescription("–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ")
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageMessages)
    .addStringOption((option) =>
      option
        .setName("nickname")
        .setDescription("–ù–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞ –≤ War Thunder")
        .setRequired(true)
    ),
  new SlashCommandBuilder()
    .setName("removetracer")
    .setDescription("–£–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è")
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageMessages)
    .addStringOption((option) =>
      option
        .setName("nickname")
        .setDescription("–ù–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞ –≤ War Thunder")
        .setRequired(true)
    ),
  new SlashCommandBuilder()
    .setName("listtraced")
    .setDescription("–°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∏–≥—Ä–æ–∫–æ–≤")
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageMessages),
  new SlashCommandBuilder()
    .setName("syncclan")
    .setDescription("–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—á–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –∫–ª–∞–Ω—É")
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator)
    .addStringOption((option) =>
      option
        .setName("clan")
        .setDescription("–¢–µ–≥ –∫–ª–∞–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ALLIANCE)")
        .setRequired(true)
    ),
  new SlashCommandBuilder()
    .setName("resettleavers")
    .setDescription("–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∞–π–ª –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–∫–∏–Ω—É–≤—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤")
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),
  new SlashCommandBuilder()
    .setName("pbnotify")
    .setDescription("Manually send PB notification to officers")
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),
  new SlashCommandBuilder()
    .setName("resources")
    .setDescription("Show current CPU and memory usage of the bot")
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator)
    .addStringOption((option) =>
      option
        .setName("option")
        .setDescription("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º")
        .setRequired(false)
        .addChoices(
          { name: "current", value: "current" },
          { name: "history", value: "history" }
        )
    ),
  new SlashCommandBuilder()
    .setName("checktracked")
    .setDescription(
      "Manually check tracked players and notify officers if needed"
    )
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),
  new SlashCommandBuilder()
    .setName("stats")
    .setDescription("–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π –æ—á–∫–æ–≤ –∑–∞ —Å—É—Ç–∫–∏ –ø–æ –∏–≥—Ä–æ–∫–∞–º")
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageMessages),
  new SlashCommandBuilder()
    .setName("teststats")
    .setDescription("–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–º")
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),
  new SlashCommandBuilder()
    .setName("simpletest")
    .setDescription("–ü—Ä–æ—Å—Ç–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞")
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageMessages),
  new SlashCommandBuilder()
    .setName("lichstat")
    .setDescription("–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞ War Thunder")
    .addStringOption((option) =>
      option
        .setName("nickname")
        .setDescription("–ù–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞ –≤ War Thunder")
        .setRequired(true)
    ),
  new SlashCommandBuilder()
    .setName("runtests")
    .setDescription("–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)")
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),
  new SlashCommandBuilder()
    .setName("aircraft-list")
    .setDescription("–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–∫–∏ —Å–∞–º–æ–ª—ë—Ç–æ–≤ –¥–ª—è –ª—ë—Ç–Ω–æ–π –∞–∫–∞–¥–µ–º–∏–∏")
    .addStringOption((option) =>
      option
        .setName("type")
        .setDescription("–¢–∏–ø —Å–∞–º–æ–ª—ë—Ç–æ–≤")
        .setRequired(false)
        .addChoices(
          { name: "–ü–æ—Ä—à–Ω–µ–≤—ã–µ", value: "piston" },
          { name: "–†–∞–Ω–Ω–∏–µ —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–µ", value: "early_jet" },
          { name: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–µ", value: "modern_jet" }
        )
    ),
  new SlashCommandBuilder()
    .setName("aircraft-add")
    .setDescription("–î–æ–±–∞–≤–∏—Ç—å —Å–∞–º–æ–ª—ë—Ç –≤ —Å–ø–∏—Å–æ–∫ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å–∞–º–æ–ª—ë—Ç–æ–≤)")
    .addStringOption((option) =>
      option
        .setName("type")
        .setDescription("–¢–∏–ø —Å–∞–º–æ–ª—ë—Ç–∞")
        .setRequired(true)
        .addChoices(
          { name: "–ü–æ—Ä—à–Ω–µ–≤–æ–π", value: "piston" },
          { name: "–†–∞–Ω–Ω–∏–π —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–π", value: "early_jet" },
          { name: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–π", value: "modern_jet" }
        )
    )
    .addStringOption((option) =>
      option
        .setName("id")
        .setDescription("–£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —Å–∞–º–æ–ª—ë—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: bf109f4)")
        .setRequired(true)
    )
    .addStringOption((option) =>
      option
        .setName("name")
        .setDescription("–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–º–æ–ª—ë—Ç–∞")
        .setRequired(true)
    )
    .addNumberOption((option) =>
      option
        .setName("br")
        .setDescription("–ë–æ–µ–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥")
        .setRequired(true)
        .setMinValue(1.0)
        .setMaxValue(12.0)
    )
    .addStringOption((option) =>
      option
        .setName("nation")
        .setDescription("–ù–∞—Ü–∏—è")
        .setRequired(true)
    )
    .addStringOption((option) =>
      option
        .setName("aircraft_type")
        .setDescription("–¢–∏–ø —Å–∞–º–æ–ª—ë—Ç–∞")
        .setRequired(true)
    ),
  new SlashCommandBuilder()
    .setName("aircraft-remove")
    .setDescription("–£–¥–∞–ª–∏—Ç—å —Å–∞–º–æ–ª—ë—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å–∞–º–æ–ª—ë—Ç–æ–≤)")
    .addStringOption((option) =>
      option
        .setName("id")
        .setDescription("ID —Å–∞–º–æ–ª—ë—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        .setRequired(true)
    ),
  new SlashCommandBuilder()
    .setName("flight-academy")
    .setDescription("–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç –¥–ª—è –ª—ë—Ç–Ω–æ–π –∞–∫–∞–¥–µ–º–∏–∏ War Thunder")
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageMessages),
].map((cmd) => cmd.toJSON());

const rest = new REST({ version: "10" }).setToken(process.env.DISCORD_TOKEN!);

async function registerCommands() {
  try {
    console.log("üîÅ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã...");
    await rest.put(
      Routes.applicationGuildCommands(
        process.env.CLIENT_ID!,
        process.env.GUILD_ID!
      ),
      { body: commands }
    );

    console.log("‚úÖ –ö–æ–º–∞–Ω–¥—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã");
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", err);
  }
}

registerCommands();
