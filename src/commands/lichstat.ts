import { ChatInputCommandInteraction, EmbedBuilder } from "discord.js";
import { logCommand, error } from "../utils/logger";

interface ThunderSkillStats {
  stats: {
    nick: string;
    rank: string;
    last_stat: string;
    r: {
      kpd: number | null;
      win: number | null;
      mission: number | null;
      death: number | null;
      winrate: number | null;
      kb: number | null;
      kb_air: number | null;
      kb_ground: number | null;
      kd: number | null;
      kd_air: number | null;
      kd_ground: number | null;
      lifetime: number | null;
    };
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–µ–ª
function safeToFixed(value: number | null, decimals: number = 2): string {
  if (value === null || value === undefined) {
    return "N/A";
  }
  return value.toFixed(decimals);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–∏—Å–µ–ª
function safeNumber(value: number | null): string {
  if (value === null || value === undefined) {
    return "N/A";
  }
  return value.toString();
}

export async function lichstatCommand(interaction: ChatInputCommandInteraction) {
  await interaction.deferReply({ ephemeral: false });

  try {
    const nickname = interaction.options.getString("nickname", true);
    
    logCommand(`–ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–∞: ${nickname}`, {
      userId: interaction.user.id,
      username: interaction.user.tag,
      nickname
    });

    // URL-–∫–æ–¥–∏—Ä—É–µ–º –Ω–∏–∫–Ω–µ–π–º –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ URL
    const encodedNickname = encodeURIComponent(nickname);
    const jsonUrl = `https://thunderskill.com/ru/stat/${encodedNickname}/export/json`;
    
    console.log(`–ó–∞–ø—Ä–æ—Å JSON: ${jsonUrl}`);

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å JSON –Ω–∞–ø—Ä—è–º—É—é
    const response = await fetch(jsonUrl, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
        'Accept': 'application/json, text/plain, */*',
        'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
        'Accept-Encoding': 'gzip, deflate, br',
        'Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1'
      }
    });

    if (!response.ok) {
      await interaction.editReply(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–≥—Ä–æ–∫–∞ **${nickname}** –Ω–∞ —Å–∞–π—Ç–µ thunderskill.com`);
      return;
    }

    const statsData: ThunderSkillStats = await response.json();
    
    if (!statsData.stats) {
      await interaction.editReply(`‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–∞ **${nickname}**`);
      return;
    }

    const stats = statsData.stats;
    const rbStats = stats.r;

    // –°–æ–∑–¥–∞–µ–º embed —Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    const embed = new EmbedBuilder()
      .setColor(0x0099ff)
      .setTitle(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ ${stats.nick}`)
      .setDescription(`**${stats.rank}**`)
      .addFields(
        { 
          name: "üéØ –ö–ü–î (–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å)", 
          value: `${safeToFixed(rbStats.kpd)}%`, 
          inline: true 
        },
        { 
          name: "üèÜ –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥", 
          value: `${safeToFixed(rbStats.winrate)}%`, 
          inline: true 
        },
        { 
          name: "‚öîÔ∏è –ë–æ–µ–≤", 
          value: safeNumber(rbStats.mission), 
          inline: true 
        },
        { 
          name: "üíÄ –°–º–µ—Ä—Ç–µ–π", 
          value: safeNumber(rbStats.death), 
          inline: true 
        },
        { 
          name: "üéñÔ∏è –ü–æ–±–µ–¥", 
          value: safeNumber(rbStats.win), 
          inline: true 
        },
        { 
          name: "‚è±Ô∏è –í—Ä–µ–º—è –∂–∏–∑–Ω–∏", 
          value: rbStats.lifetime ? `${rbStats.lifetime} –º–∏–Ω` : "N/A", 
          inline: true 
        },
        { 
          name: "üî´ K/D (–£–±–∏–π—Å—Ç–≤–∞/–°–º–µ—Ä—Ç–∏)", 
          value: safeToFixed(rbStats.kd), 
          inline: true 
        },
        { 
          name: "‚úàÔ∏è K/D –≤–æ–∑–¥—É—à–Ω—ã–µ", 
          value: safeToFixed(rbStats.kd_air), 
          inline: true 
        },
        { 
          name: "üõ°Ô∏è K/D –Ω–∞–∑–µ–º–Ω—ã–µ", 
          value: safeToFixed(rbStats.kd_ground), 
          inline: true 
        },
        { 
          name: "üí• K/B (–£–±–∏–π—Å—Ç–≤–∞/–ë–æ–π)", 
          value: safeToFixed(rbStats.kb), 
          inline: true 
        },
        { 
          name: "‚úàÔ∏è K/B –≤–æ–∑–¥—É—à–Ω—ã–µ", 
          value: safeToFixed(rbStats.kb_air), 
          inline: true 
        },
        { 
          name: "üõ°Ô∏è K/B –Ω–∞–∑–µ–º–Ω—ã–µ", 
          value: safeToFixed(rbStats.kb_ground), 
          inline: true 
        }
      )
      .setFooter({ 
        text: `–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${stats.last_stat} ‚Ä¢ –î–∞–Ω–Ω—ã–µ —Å thunderskill.com` 
      })
      .setTimestamp();

    await interaction.editReply({ embeds: [embed] });

    logCommand(`–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è –∏–≥—Ä–æ–∫–∞: ${nickname}`, {
      userId: interaction.user.id,
      username: interaction.user.tag,
      nickname
    });

  } catch (err: any) {
    error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–∞", err);
    await interaction.editReply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
} 