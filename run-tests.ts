#!/usr/bin/env ts-node

import { config } from "dotenv";
import { runAllTests } from "./src/tests/testRunner";
import { info, error } from "./src/utils/logger";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();

async function main() {
  console.log("üß™ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Discord –±–æ—Ç–∞...\n");
  
  try {
    const testResults = await runAllTests();
    
    console.log("\n" + "=".repeat(60));
    console.log("üìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø");
    console.log("=".repeat(60));
    
    console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${testResults.passed}`);
    console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${testResults.total - testResults.passed}`);
    console.log(`üìã –í—Å–µ–≥–æ: ${testResults.total}`);
    console.log(`üéØ –£—Å–ø–µ—Ö: ${testResults.success ? '–î–ê' : '–ù–ï–¢'}`);
    
    console.log("\nüìã –î–µ—Ç–∞–ª–∏ –ø–æ –Ω–∞–±–æ—Ä–∞–º —Ç–µ—Å—Ç–æ–≤:");
    for (const [suiteName, suiteResult] of Object.entries(testResults.suiteResults)) {
      const status = suiteResult.passed === suiteResult.total ? '‚úÖ' : '‚ùå';
      console.log(`  ${status} ${suiteName}: ${suiteResult.passed}/${suiteResult.total}`);
    }
    
    if (testResults.errors.length > 0) {
      console.log("\n‚ùå –û–®–ò–ë–ö–ò:");
      testResults.errors.forEach((error, index) => {
        console.log(`  ${index + 1}. ${error}`);
      });
    }
    
    console.log("\n" + "=".repeat(60));
    
    if (testResults.success) {
      console.log("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.");
      process.exit(0);
    } else {
      console.log("üí• –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.");
      process.exit(1);
    }
  } catch (err) {
    error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤", err);
    console.log("\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤:");
    console.log(err);
    process.exit(1);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown
process.on('SIGINT', () => {
  console.log('\n‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
  process.exit(1);
});

process.on('SIGTERM', () => {
  console.log('\n‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
  process.exit(1);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
main(); 